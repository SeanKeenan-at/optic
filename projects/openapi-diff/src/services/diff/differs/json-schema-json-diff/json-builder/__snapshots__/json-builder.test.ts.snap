// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`json builder arrays can learn an array of object items 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Array [
    Object {
      "field": 1,
    },
    Object {
      "field": 2,
    },
    Object {
      "field": 3,
    },
  ],
  "jsonSchemaForInput": Object {
    "items": Object {
      "properties": Object {
        "field": Object {
          "type": "number",
        },
      },
      "required": Array [
        "field",
      ],
      "type": "object",
    },
    "type": "array",
  },
}
`;

exports[`json builder arrays can learn an array of object items with polymorphism 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Array [
    Object {
      "field": 1,
    },
    Object {
      "field": 2,
    },
    Object {
      "field": 3,
      "field2": "",
    },
  ],
  "jsonSchemaForInput": Object {
    "items": Object {
      "properties": Object {
        "field": Object {
          "type": "number",
        },
        "field2": Object {
          "type": "string",
        },
      },
      "required": Array [
        "field",
      ],
      "type": "object",
    },
    "type": "array",
  },
}
`;

exports[`json builder arrays can learn an array of primitive items 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Array [
    "a",
    "b",
    "c",
  ],
  "jsonSchemaForInput": Object {
    "items": Object {
      "type": "string",
    },
    "type": "array",
  },
}
`;

exports[`json builder objects can learn an object with primitive fields 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Object {
    "age": 145,
    "hello": "world",
  },
  "jsonSchemaForInput": Object {
    "properties": Object {
      "age": Object {
        "type": "number",
      },
      "hello": Object {
        "type": "string",
      },
    },
    "required": Array [
      "hello",
      "age",
    ],
    "type": "object",
  },
}
`;

exports[`json builder objects can learn nested objects 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Object {
    "age": 145,
    "hello": "world",
    "nested": Object {
      "nested2": Object {
        "nested3": Object {
          "stringField": "abc",
        },
      },
    },
  },
  "jsonSchemaForInput": Object {
    "properties": Object {
      "age": Object {
        "type": "number",
      },
      "hello": Object {
        "type": "string",
      },
      "nested": Object {
        "properties": Object {
          "nested2": Object {
            "properties": Object {
              "nested3": Object {
                "properties": Object {
                  "stringField": Object {
                    "type": "string",
                  },
                },
                "required": Array [
                  "stringField",
                ],
                "type": "object",
              },
            },
            "required": Array [
              "nested3",
            ],
            "type": "object",
          },
        },
        "required": Array [
          "nested2",
        ],
        "type": "object",
      },
    },
    "required": Array [
      "hello",
      "age",
      "nested",
    ],
    "type": "object",
  },
}
`;

exports[`json builder objects can learn that an object with primitive fields is polymorphic 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": Object {
    "age": 145,
    "hello": "world",
  },
  "jsonSchemaForInput": Object {
    "properties": Object {
      "admin": Object {
        "type": "boolean",
      },
      "age": Object {
        "type": "number",
      },
      "hello": Object {
        "type": "string",
      },
    },
    "required": Array [
      "age",
    ],
    "type": "object",
  },
}
`;

exports[`json builder primitives can build JSON from a boolean 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": true,
  "jsonSchemaForInput": Object {
    "type": "boolean",
  },
}
`;

exports[`json builder primitives can build JSON from a null 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": null,
  "jsonSchemaForInput": Object {
    "type": "null",
  },
}
`;

exports[`json builder primitives can build JSON from a number 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": 1544,
  "jsonSchemaForInput": Object {
    "type": "number",
  },
}
`;

exports[`json builder primitives can build JSON from a string 1`] = `
Object {
  "diffBetweenGeneratedAndInput": Array [],
  "input": "string value",
  "jsonSchemaForInput": Object {
    "type": "string",
  },
}
`;

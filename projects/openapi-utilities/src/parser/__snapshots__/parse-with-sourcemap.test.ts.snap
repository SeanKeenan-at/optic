// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can parse a json schema spec with external references 1`] = `
Object {
  "jsonLike": Object {
    "example": Object {
      "token": "11111111",
      "user": Object {
        "name": "Homer",
      },
    },
    "properties": Object {
      "token": Object {
        "type": "string",
      },
      "user": Object {
        "example": Object {
          "name": "Homer",
        },
        "properties": Object {
          "name": Object {
            "type": "string",
          },
        },
        "required": Array [
          "name",
        ],
        "type": "object",
      },
    },
    "required": Array [
      "user",
      "token",
    ],
    "type": "object",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "index": 0,
        "path": "/inputs/openapi3-with-references/external-multiple.yaml",
      },
      Object {
        "ast": null,
        "index": 1,
        "path": "/inputs/openapi3-with-references/definitions.yaml",
      },
    ],
    "refMappings": Array [
      Array [
        Array [
          "properties",
          "user",
        ],
        1,
        Array [
          "User",
        ],
      ],
      Array [
        Array [
          "example",
          "user",
        ],
        1,
        Array [
          "User",
          "example",
        ],
      ],
    ],
    "rootFilePath": "/inputs/openapi3-with-references/external-multiple.yaml",
  },
}
`;

exports[`can parse a json schema spec with external references to the same file 1`] = `
Object {
  "jsonLike": Object {
    "example": Object {
      "user": Object {
        "name": "Homer",
      },
      "user2": Object {
        "name": "Homer",
      },
    },
    "properties": Object {},
    "required": Array [],
    "type": "object",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "index": 0,
        "path": "/inputs/openapi3-with-references/external-multiple-branches.yaml",
      },
      Object {
        "ast": null,
        "index": 1,
        "path": "/inputs/openapi3-with-references/definitions.yaml",
      },
    ],
    "refMappings": Array [
      Array [
        Array [
          "example",
          "user",
        ],
        1,
        Array [
          "User",
          "example",
        ],
      ],
      Array [
        Array [
          "example",
          "user2",
        ],
        1,
        Array [
          "User",
          "example",
        ],
      ],
    ],
    "rootFilePath": "/inputs/openapi3-with-references/external-multiple-branches.yaml",
  },
}
`;

exports[`can parse a real schema spec with external references, resolved in any order 1`] = `
Object {
  "jsonLike": Object {
    "components": Object {
      "parameters": Object {
        "ThingId": Object {
          "description": "Unique identifier for thing instances",
          "in": "path",
          "name": "thing_id",
          "required": true,
          "schema": Object {
            "format": "uuid",
            "type": "string",
          },
        },
      },
      "schemas": Object {
        "ThingAttributes": Object {
          "additionalProperties": false,
          "properties": Object {
            "created": Object {
              "description": "Timestamp when this instance of thing was created.",
              "example": "2021-10-05T13:23:17Z",
              "format": "date-time",
              "type": "string",
            },
            "description": Object {
              "description": "User-friendly description of this instance of thing.",
              "example": "This is a thing named thing.",
              "type": "string",
            },
            "name": Object {
              "description": "Name of this instance of thing.",
              "example": "thing",
              "type": "string",
            },
            "strangeness": Object {
              "description": "The amount of strangeness this thing adds or removes from the situation.",
              "example": 42,
              "type": "number",
            },
            "updated": Object {
              "description": "Timestamp when this instance of thing was last updated.",
              "example": "2021-10-05T13:25:29Z",
              "format": "date-time",
              "type": "string",
            },
          },
          "type": "object",
        },
        "ThingCollection": Object {
          "items": Object {
            "additionalProperties": false,
            "description": "thing resource object",
            "properties": Object {
              "attributes": Object {
                "additionalProperties": false,
                "properties": Object {
                  "created": Object {
                    "description": "Timestamp when this instance of thing was created.",
                    "example": "2021-10-05T13:23:17Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "description": Object {
                    "description": "User-friendly description of this instance of thing.",
                    "example": "This is a thing named thing.",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "Name of this instance of thing.",
                    "example": "thing",
                    "type": "string",
                  },
                  "strangeness": Object {
                    "description": "The amount of strangeness this thing adds or removes from the situation.",
                    "example": 42,
                    "type": "number",
                  },
                  "updated": Object {
                    "description": "Timestamp when this instance of thing was last updated.",
                    "example": "2021-10-05T13:25:29Z",
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": Object {
                "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                "format": "uuid",
                "type": "string",
              },
              "relationships": Object {
                "additionalProperties": false,
                "properties": Object {
                  "example": Object {
                    "properties": Object {
                      "data": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "id": Object {
                            "format": "uuid",
                            "type": "string",
                          },
                          "type": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "type",
                          "id",
                        ],
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "related": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "meta": Object {
                        "additionalProperties": true,
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "data",
                      "links",
                    ],
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "type": Object {
                "type": "string",
              },
            },
            "type": "object",
          },
          "type": "array",
        },
        "ThingCollectionResponse": Object {
          "description": "Response containing a collection of thing resource objects",
          "properties": Object {
            "data": Object {
              "items": Object {
                "additionalProperties": false,
                "description": "thing resource object",
                "properties": Object {
                  "attributes": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "created": Object {
                        "description": "Timestamp when this instance of thing was created.",
                        "example": "2021-10-05T13:23:17Z",
                        "format": "date-time",
                        "type": "string",
                      },
                      "description": Object {
                        "description": "User-friendly description of this instance of thing.",
                        "example": "This is a thing named thing.",
                        "type": "string",
                      },
                      "name": Object {
                        "description": "Name of this instance of thing.",
                        "example": "thing",
                        "type": "string",
                      },
                      "strangeness": Object {
                        "description": "The amount of strangeness this thing adds or removes from the situation.",
                        "example": 42,
                        "type": "number",
                      },
                      "updated": Object {
                        "description": "Timestamp when this instance of thing was last updated.",
                        "example": "2021-10-05T13:25:29Z",
                        "format": "date-time",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "id": Object {
                    "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                    "format": "uuid",
                    "type": "string",
                  },
                  "relationships": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "example": Object {
                        "properties": Object {
                          "data": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "id": Object {
                                "format": "uuid",
                                "type": "string",
                              },
                              "type": Object {
                                "type": "string",
                              },
                            },
                            "required": Array [
                              "type",
                              "id",
                            ],
                          },
                          "links": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "related": Object {
                                "oneOf": Array [
                                  Object {
                                    "type": "string",
                                  },
                                  Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "href": Object {
                                        "type": "string",
                                      },
                                      "meta": Object {
                                        "additionalProperties": true,
                                        "type": "object",
                                      },
                                    },
                                    "required": Array [
                                      "href",
                                    ],
                                    "type": "object",
                                  },
                                ],
                              },
                            },
                            "type": "object",
                          },
                          "meta": Object {
                            "additionalProperties": true,
                            "type": "object",
                          },
                        },
                        "required": Array [
                          "data",
                          "links",
                        ],
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                  "type": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "type": "array",
            },
            "jsonapi": Object {
              "additionalProperties": false,
              "properties": Object {
                "version": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "version",
              ],
              "type": "object",
            },
            "links": Object {
              "additionalProperties": false,
              "properties": Object {
                "first": Object {
                  "oneOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "href": Object {
                          "type": "string",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "href",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "last": Object {
                  "oneOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "href": Object {
                          "type": "string",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "href",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "next": Object {
                  "oneOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "href": Object {
                          "type": "string",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "href",
                      ],
                      "type": "object",
                    },
                  ],
                },
                "prev": Object {
                  "oneOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "href": Object {
                          "type": "string",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "href",
                      ],
                      "type": "object",
                    },
                  ],
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
        "ThingRelationships": Object {
          "additionalProperties": false,
          "properties": Object {
            "example": Object {
              "properties": Object {
                "data": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "id": Object {
                      "format": "uuid",
                      "type": "string",
                    },
                    "type": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "type",
                    "id",
                  ],
                },
                "links": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "related": Object {
                      "oneOf": Array [
                        Object {
                          "type": "string",
                        },
                        Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "href": Object {
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                          },
                          "required": Array [
                            "href",
                          ],
                          "type": "object",
                        },
                      ],
                    },
                  },
                  "type": "object",
                },
                "meta": Object {
                  "additionalProperties": true,
                  "type": "object",
                },
              },
              "required": Array [
                "data",
                "links",
              ],
              "type": "object",
            },
          },
          "type": "object",
        },
        "ThingResource": Object {
          "additionalProperties": false,
          "description": "thing resource object",
          "properties": Object {
            "attributes": Object {
              "additionalProperties": false,
              "properties": Object {
                "created": Object {
                  "description": "Timestamp when this instance of thing was created.",
                  "example": "2021-10-05T13:23:17Z",
                  "format": "date-time",
                  "type": "string",
                },
                "description": Object {
                  "description": "User-friendly description of this instance of thing.",
                  "example": "This is a thing named thing.",
                  "type": "string",
                },
                "name": Object {
                  "description": "Name of this instance of thing.",
                  "example": "thing",
                  "type": "string",
                },
                "strangeness": Object {
                  "description": "The amount of strangeness this thing adds or removes from the situation.",
                  "example": 42,
                  "type": "number",
                },
                "updated": Object {
                  "description": "Timestamp when this instance of thing was last updated.",
                  "example": "2021-10-05T13:25:29Z",
                  "format": "date-time",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "id": Object {
              "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
              "format": "uuid",
              "type": "string",
            },
            "relationships": Object {
              "additionalProperties": false,
              "properties": Object {
                "example": Object {
                  "properties": Object {
                    "data": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "id": Object {
                          "format": "uuid",
                          "type": "string",
                        },
                        "type": Object {
                          "type": "string",
                        },
                      },
                      "required": Array [
                        "type",
                        "id",
                      ],
                    },
                    "links": Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "related": Object {
                          "oneOf": Array [
                            Object {
                              "type": "string",
                            },
                            Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "href": Object {
                                  "type": "string",
                                },
                                "meta": Object {
                                  "additionalProperties": true,
                                  "type": "object",
                                },
                              },
                              "required": Array [
                                "href",
                              ],
                              "type": "object",
                            },
                          ],
                        },
                      },
                      "type": "object",
                    },
                    "meta": Object {
                      "additionalProperties": true,
                      "type": "object",
                    },
                  },
                  "required": Array [
                    "data",
                    "links",
                  ],
                  "type": "object",
                },
              },
              "type": "object",
            },
            "type": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
        "ThingResourceResponse": Object {
          "description": "Response containing a single thing resource object",
          "properties": Object {
            "data": Object {
              "additionalProperties": false,
              "description": "thing resource object",
              "properties": Object {
                "attributes": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "created": Object {
                      "description": "Timestamp when this instance of thing was created.",
                      "example": "2021-10-05T13:23:17Z",
                      "format": "date-time",
                      "type": "string",
                    },
                    "description": Object {
                      "description": "User-friendly description of this instance of thing.",
                      "example": "This is a thing named thing.",
                      "type": "string",
                    },
                    "name": Object {
                      "description": "Name of this instance of thing.",
                      "example": "thing",
                      "type": "string",
                    },
                    "strangeness": Object {
                      "description": "The amount of strangeness this thing adds or removes from the situation.",
                      "example": 42,
                      "type": "number",
                    },
                    "updated": Object {
                      "description": "Timestamp when this instance of thing was last updated.",
                      "example": "2021-10-05T13:25:29Z",
                      "format": "date-time",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "id": Object {
                  "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                  "format": "uuid",
                  "type": "string",
                },
                "relationships": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "example": Object {
                      "properties": Object {
                        "data": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "type": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "type",
                            "id",
                          ],
                        },
                        "links": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "related": Object {
                              "oneOf": Array [
                                Object {
                                  "type": "string",
                                },
                                Object {
                                  "additionalProperties": false,
                                  "properties": Object {
                                    "href": Object {
                                      "type": "string",
                                    },
                                    "meta": Object {
                                      "additionalProperties": true,
                                      "type": "object",
                                    },
                                  },
                                  "required": Array [
                                    "href",
                                  ],
                                  "type": "object",
                                },
                              ],
                            },
                          },
                          "type": "object",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "data",
                        "links",
                      ],
                      "type": "object",
                    },
                  },
                  "type": "object",
                },
                "type": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
            "jsonapi": Object {
              "additionalProperties": false,
              "properties": Object {
                "version": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "version",
              ],
              "type": "object",
            },
            "links": Object {
              "additionalProperties": false,
              "properties": Object {
                "self": Object {
                  "oneOf": Array [
                    Object {
                      "type": "string",
                    },
                    Object {
                      "additionalProperties": false,
                      "properties": Object {
                        "href": Object {
                          "type": "string",
                        },
                        "meta": Object {
                          "additionalProperties": true,
                          "type": "object",
                        },
                      },
                      "required": Array [
                        "href",
                      ],
                      "type": "object",
                    },
                  ],
                },
              },
              "type": "object",
            },
          },
          "type": "object",
        },
      },
    },
    "info": Object {
      "title": "v3",
      "version": "3.0.0",
    },
    "openapi": "3.0.3",
    "paths": Object {
      "/thing": Object {
        "get": Object {
          "description": "List instances of thing",
          "operationId": "listThing",
          "parameters": Array [
            Object {
              "description": "The requested version of the endpoint to process the request",
              "in": "query",
              "name": "version",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "description": "Response containing a collection of thing resource objects",
                    "properties": Object {
                      "data": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "description": "thing resource object",
                          "properties": Object {
                            "attributes": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "created": Object {
                                  "description": "Timestamp when this instance of thing was created.",
                                  "example": "2021-10-05T13:23:17Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                                "description": Object {
                                  "description": "User-friendly description of this instance of thing.",
                                  "example": "This is a thing named thing.",
                                  "type": "string",
                                },
                                "name": Object {
                                  "description": "Name of this instance of thing.",
                                  "example": "thing",
                                  "type": "string",
                                },
                                "strangeness": Object {
                                  "description": "The amount of strangeness this thing adds or removes from the situation.",
                                  "example": 42,
                                  "type": "number",
                                },
                                "updated": Object {
                                  "description": "Timestamp when this instance of thing was last updated.",
                                  "example": "2021-10-05T13:25:29Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "id": Object {
                              "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                              "format": "uuid",
                              "type": "string",
                            },
                            "relationships": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "example": Object {
                                  "properties": Object {
                                    "data": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "id": Object {
                                          "format": "uuid",
                                          "type": "string",
                                        },
                                        "type": Object {
                                          "type": "string",
                                        },
                                      },
                                      "required": Array [
                                        "type",
                                        "id",
                                      ],
                                    },
                                    "links": Object {
                                      "additionalProperties": false,
                                      "properties": Object {
                                        "related": Object {
                                          "oneOf": Array [
                                            Object {
                                              "type": "string",
                                            },
                                            Object {
                                              "additionalProperties": false,
                                              "properties": Object {
                                                "href": Object {
                                                  "type": "string",
                                                },
                                                "meta": Object {
                                                  "additionalProperties": true,
                                                  "type": "object",
                                                },
                                              },
                                              "required": Array [
                                                "href",
                                              ],
                                              "type": "object",
                                            },
                                          ],
                                        },
                                      },
                                      "type": "object",
                                    },
                                    "meta": Object {
                                      "additionalProperties": true,
                                      "type": "object",
                                    },
                                  },
                                  "required": Array [
                                    "data",
                                    "links",
                                  ],
                                  "type": "object",
                                },
                              },
                              "type": "object",
                            },
                            "type": Object {
                              "type": "string",
                            },
                          },
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "first": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                          "last": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                          "next": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                          "prev": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Returns a list of thing instances",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Bad Request: A parameter provided as a part of the request was invalid.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "401": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "403": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "404": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Not Found: The resource being operated on could not be found.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "500": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Internal Server Error: An error was encountered while attempting to process the request.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
          },
          "tags": Array [
            "Thing",
          ],
        },
        "post": Object {
          "description": "Create a new thing",
          "operationId": "createThing",
          "parameters": Array [
            Object {
              "description": "The requested version of the endpoint to process the request",
              "in": "query",
              "name": "version",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "201": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "description": "Response containing a single thing resource object",
                    "properties": Object {
                      "data": Object {
                        "additionalProperties": false,
                        "description": "thing resource object",
                        "properties": Object {
                          "attributes": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "created": Object {
                                "description": "Timestamp when this instance of thing was created.",
                                "example": "2021-10-05T13:23:17Z",
                                "format": "date-time",
                                "type": "string",
                              },
                              "description": Object {
                                "description": "User-friendly description of this instance of thing.",
                                "example": "This is a thing named thing.",
                                "type": "string",
                              },
                              "name": Object {
                                "description": "Name of this instance of thing.",
                                "example": "thing",
                                "type": "string",
                              },
                              "strangeness": Object {
                                "description": "The amount of strangeness this thing adds or removes from the situation.",
                                "example": 42,
                                "type": "number",
                              },
                              "updated": Object {
                                "description": "Timestamp when this instance of thing was last updated.",
                                "example": "2021-10-05T13:25:29Z",
                                "format": "date-time",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "id": Object {
                            "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                            "format": "uuid",
                            "type": "string",
                          },
                          "relationships": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "example": Object {
                                "properties": Object {
                                  "data": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "id": Object {
                                        "format": "uuid",
                                        "type": "string",
                                      },
                                      "type": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "type",
                                      "id",
                                    ],
                                  },
                                  "links": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "related": Object {
                                        "oneOf": Array [
                                          Object {
                                            "type": "string",
                                          },
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "href": Object {
                                                "type": "string",
                                              },
                                              "meta": Object {
                                                "additionalProperties": true,
                                                "type": "object",
                                              },
                                            },
                                            "required": Array [
                                              "href",
                                            ],
                                            "type": "object",
                                          },
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "data",
                                  "links",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "type": Object {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "self": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Created thing successfully",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Bad Request: A parameter provided as a part of the request was invalid.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "401": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "403": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "404": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Not Found: The resource being operated on could not be found.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "409": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "500": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Internal Server Error: An error was encountered while attempting to process the request.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
          },
          "tags": Array [
            "Thing",
          ],
        },
      },
      "/thing/{thing_id}": Object {
        "delete": Object {
          "description": "Delete an instance of thing",
          "operationId": "deleteThing",
          "parameters": Array [
            Object {
              "description": "The requested version of the endpoint to process the request",
              "in": "query",
              "name": "version",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "description": "Unique identifier for thing instances",
              "in": "path",
              "name": "thing_id",
              "required": true,
              "schema": Object {
                "format": "uuid",
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "204": Object {
              "description": "The operation completed successfully with no content",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Bad Request: A parameter provided as a part of the request was invalid.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "401": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "403": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "404": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Not Found: The resource being operated on could not be found.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "409": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "500": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Internal Server Error: An error was encountered while attempting to process the request.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
          },
          "tags": Array [
            "Thing",
          ],
        },
        "get": Object {
          "description": "Get an instance of thing",
          "operationId": "getThing",
          "parameters": Array [
            Object {
              "description": "The requested version of the endpoint to process the request",
              "in": "query",
              "name": "version",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "description": "Unique identifier for thing instances",
              "in": "path",
              "name": "thing_id",
              "required": true,
              "schema": Object {
                "format": "uuid",
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "description": "Response containing a single thing resource object",
                    "properties": Object {
                      "data": Object {
                        "additionalProperties": false,
                        "description": "thing resource object",
                        "properties": Object {
                          "attributes": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "created": Object {
                                "description": "Timestamp when this instance of thing was created.",
                                "example": "2021-10-05T13:23:17Z",
                                "format": "date-time",
                                "type": "string",
                              },
                              "description": Object {
                                "description": "User-friendly description of this instance of thing.",
                                "example": "This is a thing named thing.",
                                "type": "string",
                              },
                              "name": Object {
                                "description": "Name of this instance of thing.",
                                "example": "thing",
                                "type": "string",
                              },
                              "strangeness": Object {
                                "description": "The amount of strangeness this thing adds or removes from the situation.",
                                "example": 42,
                                "type": "number",
                              },
                              "updated": Object {
                                "description": "Timestamp when this instance of thing was last updated.",
                                "example": "2021-10-05T13:25:29Z",
                                "format": "date-time",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "id": Object {
                            "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                            "format": "uuid",
                            "type": "string",
                          },
                          "relationships": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "example": Object {
                                "properties": Object {
                                  "data": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "id": Object {
                                        "format": "uuid",
                                        "type": "string",
                                      },
                                      "type": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "type",
                                      "id",
                                    ],
                                  },
                                  "links": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "related": Object {
                                        "oneOf": Array [
                                          Object {
                                            "type": "string",
                                          },
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "href": Object {
                                                "type": "string",
                                              },
                                              "meta": Object {
                                                "additionalProperties": true,
                                                "type": "object",
                                              },
                                            },
                                            "required": Array [
                                              "href",
                                            ],
                                            "type": "object",
                                          },
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "data",
                                  "links",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "type": Object {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "self": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Returns an instance of thing",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Bad Request: A parameter provided as a part of the request was invalid.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "401": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "403": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "404": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Not Found: The resource being operated on could not be found.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "500": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Internal Server Error: An error was encountered while attempting to process the request.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
          },
          "tags": Array [
            "Thing",
          ],
        },
        "patch": Object {
          "description": "Update an instance of thing",
          "operationId": "updateThing",
          "parameters": Array [
            Object {
              "description": "The requested version of the endpoint to process the request",
              "in": "query",
              "name": "version",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "description": "Unique identifier for thing instances",
              "in": "path",
              "name": "thing_id",
              "required": true,
              "schema": Object {
                "format": "uuid",
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "description": "Response containing a single thing resource object",
                    "properties": Object {
                      "data": Object {
                        "additionalProperties": false,
                        "description": "thing resource object",
                        "properties": Object {
                          "attributes": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "created": Object {
                                "description": "Timestamp when this instance of thing was created.",
                                "example": "2021-10-05T13:23:17Z",
                                "format": "date-time",
                                "type": "string",
                              },
                              "description": Object {
                                "description": "User-friendly description of this instance of thing.",
                                "example": "This is a thing named thing.",
                                "type": "string",
                              },
                              "name": Object {
                                "description": "Name of this instance of thing.",
                                "example": "thing",
                                "type": "string",
                              },
                              "strangeness": Object {
                                "description": "The amount of strangeness this thing adds or removes from the situation.",
                                "example": 42,
                                "type": "number",
                              },
                              "updated": Object {
                                "description": "Timestamp when this instance of thing was last updated.",
                                "example": "2021-10-05T13:25:29Z",
                                "format": "date-time",
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "id": Object {
                            "example": "d5b640e5-d88c-4c17-9bf0-93597b7a1ce2",
                            "format": "uuid",
                            "type": "string",
                          },
                          "relationships": Object {
                            "additionalProperties": false,
                            "properties": Object {
                              "example": Object {
                                "properties": Object {
                                  "data": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "id": Object {
                                        "format": "uuid",
                                        "type": "string",
                                      },
                                      "type": Object {
                                        "type": "string",
                                      },
                                    },
                                    "required": Array [
                                      "type",
                                      "id",
                                    ],
                                  },
                                  "links": Object {
                                    "additionalProperties": false,
                                    "properties": Object {
                                      "related": Object {
                                        "oneOf": Array [
                                          Object {
                                            "type": "string",
                                          },
                                          Object {
                                            "additionalProperties": false,
                                            "properties": Object {
                                              "href": Object {
                                                "type": "string",
                                              },
                                              "meta": Object {
                                                "additionalProperties": true,
                                                "type": "object",
                                              },
                                            },
                                            "required": Array [
                                              "href",
                                            ],
                                            "type": "object",
                                          },
                                        ],
                                      },
                                    },
                                    "type": "object",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "data",
                                  "links",
                                ],
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "type": Object {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                      "links": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "self": Object {
                            "oneOf": Array [
                              Object {
                                "type": "string",
                              },
                              Object {
                                "additionalProperties": false,
                                "properties": Object {
                                  "href": Object {
                                    "type": "string",
                                  },
                                  "meta": Object {
                                    "additionalProperties": true,
                                    "type": "object",
                                  },
                                },
                                "required": Array [
                                  "href",
                                ],
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Instance of thing is updated.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "204": Object {
              "description": "The operation completed successfully with no content",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Bad Request: A parameter provided as a part of the request was invalid.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "401": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "403": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "404": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Not Found: The resource being operated on could not be found.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "409": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Conflict: The requested operation conflicts with the current state of the resource in some way.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
            "500": Object {
              "content": Object {
                "application/vnd.api+json": Object {
                  "schema": Object {
                    "additionalProperties": false,
                    "properties": Object {
                      "errors": Object {
                        "items": Object {
                          "additionalProperties": false,
                          "properties": Object {
                            "detail": Object {
                              "type": "string",
                            },
                            "id": Object {
                              "format": "uuid",
                              "type": "string",
                            },
                            "meta": Object {
                              "additionalProperties": true,
                              "type": "object",
                            },
                            "source": Object {
                              "additionalProperties": false,
                              "properties": Object {
                                "parameter": Object {
                                  "type": "string",
                                },
                                "pointer": Object {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "status": Object {
                              "type": "string",
                            },
                          },
                          "required": Array [
                            "status",
                            "detail",
                          ],
                          "type": "object",
                        },
                        "minItems": 1,
                        "type": "array",
                      },
                      "jsonapi": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "version": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "version",
                        ],
                        "type": "object",
                      },
                    },
                    "required": Array [
                      "jsonapi",
                      "errors",
                    ],
                    "type": "object",
                  },
                },
              },
              "description": "Internal Server Error: An error was encountered while attempting to process the request.",
              "headers": Object {
                "deprecation": Object {
                  "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "snyk-request-id": Object {
                  "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
",
                  "schema": Object {
                    "format": "uuid",
                    "type": "string",
                  },
                },
                "snyk-version-lifecycle-stage": Object {
                  "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
",
                  "schema": Object {
                    "enum": Array [
                      "wip",
                      "experimental",
                      "beta",
                      "ga",
                      "deprecated",
                      "sunset",
                    ],
                    "type": "string",
                  },
                },
                "snyk-version-requested": Object {
                  "description": "A header containing the version of the endpoint requested by the caller.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "snyk-version-served": Object {
                  "description": "A header containing the version of the endpoint that was served by the API.",
                  "schema": Object {
                    "pattern": "^(wip|work-in-progress|experimental|beta|(([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9])))$",
                    "type": "string",
                  },
                },
                "sunset": Object {
                  "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
https://datatracker.ietf.org/doc/html/rfc8594
",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
              },
            },
          },
          "tags": Array [
            "Thing",
          ],
        },
      },
    },
    "servers": Array [
      Object {
        "description": "Public Snyk API",
        "url": "https://api.snyk.io/v3",
      },
    ],
    "tags": Array [
      Object {
        "description": "Short description of what Thing represents",
        "name": "Thing",
      },
    ],
    "x-snyk-api-stability": "experimental",
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "index": 0,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 1,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 2,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 3,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 4,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 5,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 6,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 7,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 8,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 9,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 10,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 11,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 12,
        "path": undefined,
      },
      Object {
        "ast": null,
        "index": 13,
        "path": undefined,
      },
    ],
    "refMappings": Array [
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "parameters",
          "0",
        ],
        1,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-version-requested",
          "schema",
        ],
        13,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-version-served",
          "schema",
        ],
        13,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingResourceResponse",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "jsonapi",
        ],
        10,
        Array [
          "JsonApi",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingResource",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "type",
        ],
        11,
        Array [
          "Types",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "attributes",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingAttributes",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingRelationships",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
          "properties",
          "example",
        ],
        10,
        Array [
          "Relationship",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
          "properties",
          "example",
          "properties",
          "links",
        ],
        10,
        Array [
          "RelatedLink",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
          "properties",
          "example",
          "properties",
          "links",
          "properties",
          "related",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
          "properties",
          "example",
          "properties",
          "links",
          "properties",
          "related",
          "oneOf",
          "1",
          "properties",
          "meta",
        ],
        10,
        Array [
          "Meta",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "properties",
          "relationships",
          "properties",
          "example",
          "properties",
          "meta",
        ],
        10,
        Array [
          "Meta",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
        ],
        10,
        Array [
          "SelfLink",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "201",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
          "properties",
          "self",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
        ],
        3,
        Array [
          "400",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "jsonapi",
        ],
        10,
        Array [
          "JsonApi",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "400",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "errors",
          "items",
        ],
        12,
        Array [
          "Error",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
        ],
        4,
        Array [
          "401",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "401",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
        ],
        5,
        Array [
          "403",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "403",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
        ],
        6,
        Array [
          "404",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "404",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
        ],
        7,
        Array [
          "409",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "409",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
        ],
        8,
        Array [
          "500",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "post",
          "responses",
          "500",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        12,
        Array [
          "ErrorDocument",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "parameters",
          "0",
        ],
        1,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingCollectionResponse",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "jsonapi",
        ],
        10,
        Array [
          "JsonApi",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingCollection",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "data",
          "items",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingResource",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
        ],
        10,
        Array [
          "PaginatedLinks",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
          "properties",
          "first",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
          "properties",
          "last",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
          "properties",
          "prev",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
          "properties",
          "links",
          "properties",
          "next",
        ],
        10,
        Array [
          "LinkProperty",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "400",
        ],
        3,
        Array [
          "400",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "401",
        ],
        4,
        Array [
          "401",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "403",
        ],
        5,
        Array [
          "403",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "404",
        ],
        6,
        Array [
          "404",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing",
          "get",
          "responses",
          "500",
        ],
        8,
        Array [
          "500",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "parameters",
          "0",
        ],
        1,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "parameters",
          "1",
        ],
        0,
        Array [
          "components",
          "parameters",
          "ThingId",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingResourceResponse",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "400",
        ],
        3,
        Array [
          "400",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "401",
        ],
        4,
        Array [
          "401",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "403",
        ],
        5,
        Array [
          "403",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "404",
        ],
        6,
        Array [
          "404",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "get",
          "responses",
          "500",
        ],
        8,
        Array [
          "500",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "parameters",
          "0",
        ],
        1,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "parameters",
          "1",
        ],
        0,
        Array [
          "components",
          "parameters",
          "ThingId",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "200",
          "content",
          "application/vnd.api+json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ThingResourceResponse",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
        ],
        9,
        Array [
          "204",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "snyk-version-requested",
        ],
        2,
        Array [
          "VersionRequestedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "snyk-version-served",
        ],
        2,
        Array [
          "VersionServedResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "snyk-request-id",
        ],
        2,
        Array [
          "RequestIdResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "snyk-version-lifecycle-stage",
        ],
        2,
        Array [
          "VersionStageResponseHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "deprecation",
        ],
        2,
        Array [
          "DeprecationHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "204",
          "headers",
          "sunset",
        ],
        2,
        Array [
          "SunsetHeader",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "400",
        ],
        3,
        Array [
          "400",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "401",
        ],
        4,
        Array [
          "401",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "403",
        ],
        5,
        Array [
          "403",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "404",
        ],
        6,
        Array [
          "404",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "409",
        ],
        7,
        Array [
          "409",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "patch",
          "responses",
          "500",
        ],
        8,
        Array [
          "500",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "parameters",
          "0",
        ],
        1,
        Array [
          "Version",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "parameters",
          "1",
        ],
        0,
        Array [
          "components",
          "parameters",
          "ThingId",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "204",
        ],
        9,
        Array [
          "204",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "400",
        ],
        3,
        Array [
          "400",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "401",
        ],
        4,
        Array [
          "401",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "403",
        ],
        5,
        Array [
          "403",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "404",
        ],
        6,
        Array [
          "404",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "409",
        ],
        7,
        Array [
          "409",
        ],
      ],
      Array [
        Array [
          "paths",
          "/thing/{thing_id}",
          "delete",
          "responses",
          "500",
        ],
        8,
        Array [
          "500",
        ],
      ],
    ],
    "rootFilePath": undefined,
  },
}
`;

exports[`can parse an OpenAPI file and have valid sourcemap 1`] = `
Object {
  "jsonLike": Object {
    "components": Object {
      "schemas": Object {
        "ApiResponse": Object {
          "properties": Object {
            "code": Object {
              "format": "int32",
              "type": "integer",
            },
            "message": Object {
              "type": "string",
            },
            "type": Object {
              "type": "string",
            },
          },
          "type": "object",
        },
        "Category": Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Category",
          },
        },
        "Order": Object {
          "properties": Object {
            "complete": Object {
              "default": false,
              "type": "boolean",
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "petId": Object {
              "format": "int64",
              "type": "integer",
            },
            "quantity": Object {
              "format": "int32",
              "type": "integer",
            },
            "shipDate": Object {
              "format": "date-time",
              "type": "string",
            },
            "status": Object {
              "description": "Order Status",
              "enum": Array [
                "placed",
                "approved",
                "delivered",
              ],
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Order",
          },
        },
        "Pet": Object {
          "properties": Object {
            "category": Object {
              "properties": Object {
                "id": Object {
                  "format": "int64",
                  "type": "integer",
                },
                "name": Object {
                  "type": "string",
                },
              },
              "type": "object",
              "xml": Object {
                "name": "Category",
              },
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "example": "doggie",
              "type": "string",
            },
            "photoUrls": Object {
              "items": Object {
                "type": "string",
              },
              "type": "array",
              "xml": Object {
                "name": "photoUrl",
                "wrapped": true,
              },
            },
            "status": Object {
              "description": "pet status in the store",
              "enum": Array [
                "available",
                "pending",
                "sold",
              ],
              "type": "string",
            },
            "tags": Object {
              "items": Object {
                "properties": Object {
                  "id": Object {
                    "format": "int64",
                    "type": "integer",
                  },
                  "name": Object {
                    "type": "string",
                  },
                },
                "type": "object",
                "xml": Object {
                  "name": "Tag",
                },
              },
              "type": "array",
              "xml": Object {
                "name": "tag",
                "wrapped": true,
              },
            },
          },
          "required": Array [
            "name",
            "photoUrls",
          ],
          "type": "object",
          "xml": Object {
            "name": "Pet",
          },
        },
        "Tag": Object {
          "properties": Object {
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "name": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "Tag",
          },
        },
        "User": Object {
          "properties": Object {
            "email": Object {
              "type": "string",
            },
            "firstName": Object {
              "type": "string",
            },
            "id": Object {
              "format": "int64",
              "type": "integer",
            },
            "lastName": Object {
              "type": "string",
            },
            "password": Object {
              "type": "string",
            },
            "phone": Object {
              "type": "string",
            },
            "userStatus": Object {
              "description": "User Status",
              "format": "int32",
              "type": "integer",
            },
            "username": Object {
              "type": "string",
            },
          },
          "type": "object",
          "xml": Object {
            "name": "User",
          },
        },
      },
      "securitySchemes": Object {
        "api_key": Object {
          "in": "header",
          "name": "api_key",
          "type": "apiKey",
        },
        "petstore_auth": Object {
          "flows": Object {
            "implicit": Object {
              "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
              "scopes": Object {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account",
              },
            },
          },
          "type": "oauth2",
        },
      },
    },
    "externalDocs": Object {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io",
    },
    "info": Object {
      "contact": Object {
        "email": "apiteam@swagger.io",
      },
      "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
      "license": Object {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
      },
      "termsOfService": "http://swagger.io/terms/",
      "title": "Swagger Petstore",
      "version": "1.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/pet/{petId}/uploadImage": Object {
        "post": Object {
          "operationId": "uploadFile",
          "parameters": Array [
            Object {
              "description": "ID of pet to update",
              "in": "path",
              "name": "petId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "type": "integer",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "multipart/form-data": Object {
                "schema": Object {
                  "properties": Object {
                    "additionalMetadata": Object {
                      "description": "Additional data to pass to server",
                      "type": "string",
                    },
                    "file": Object {
                      "description": "file to upload",
                      "format": "binary",
                      "type": "string",
                    },
                  },
                },
              },
            },
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "code": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "message": Object {
                        "type": "string",
                      },
                      "type": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "successful operation",
            },
          },
          "security": Array [
            Object {
              "petstore_auth": Array [
                "write:pets",
                "read:pets",
              ],
            },
          ],
          "summary": "uploads an image",
          "tags": Array [
            "pet",
          ],
        },
      },
      "/store/inventory": Object {
        "get": Object {
          "description": "Returns a map of status codes to quantities",
          "operationId": "getInventory",
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "additionalProperties": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                    "type": "object",
                  },
                },
              },
              "description": "successful operation",
            },
          },
          "security": Array [
            Object {
              "api_key": Array [],
            },
          ],
          "summary": "Returns pet inventories by status",
          "tags": Array [
            "store",
          ],
        },
      },
      "/store/order": Object {
        "post": Object {
          "operationId": "placeOrder",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "complete": Object {
                      "default": false,
                      "type": "boolean",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "petId": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "quantity": Object {
                      "format": "int32",
                      "type": "integer",
                    },
                    "shipDate": Object {
                      "format": "date-time",
                      "type": "string",
                    },
                    "status": Object {
                      "description": "Order Status",
                      "enum": Array [
                        "placed",
                        "approved",
                        "delivered",
                      ],
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "Order",
                  },
                },
              },
            },
            "description": "order placed for purchasing the pet",
            "required": true,
          },
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid Order",
            },
          },
          "summary": "Place an order for a pet",
          "tags": Array [
            "store",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/store/order/{orderId}": Object {
        "delete": Object {
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "parameters": Array [
            Object {
              "description": "ID of the order that needs to be deleted",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid ID supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "Order not found",
            },
          },
          "summary": "Delete purchase order by ID",
          "tags": Array [
            "store",
          ],
        },
        "get": Object {
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "operationId": "getOrderById",
          "parameters": Array [
            Object {
              "description": "ID of pet that needs to be fetched",
              "in": "path",
              "name": "orderId",
              "required": true,
              "schema": Object {
                "format": "int64",
                "maximum": 10,
                "minimum": 1,
                "type": "integer",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "complete": Object {
                        "default": false,
                        "type": "boolean",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "petId": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "quantity": Object {
                        "format": "int32",
                        "type": "integer",
                      },
                      "shipDate": Object {
                        "format": "date-time",
                        "type": "string",
                      },
                      "status": Object {
                        "description": "Order Status",
                        "enum": Array [
                          "placed",
                          "approved",
                          "delivered",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "Order",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid ID supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "Order not found",
            },
          },
          "summary": "Find purchase order by ID",
          "tags": Array [
            "store",
          ],
        },
      },
      "/user": Object {
        "post": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "type": "string",
                    },
                    "firstName": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "lastName": Object {
                      "type": "string",
                    },
                    "password": Object {
                      "type": "string",
                    },
                    "phone": Object {
                      "type": "string",
                    },
                    "userStatus": Object {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "User",
                  },
                },
              },
            },
            "description": "Created user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Create user",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/createWithArray": Object {
        "post": Object {
          "operationId": "createUsersWithArrayInput",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/createWithList": Object {
        "post": Object {
          "operationId": "createUsersWithListInput",
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                  "type": "array",
                },
              },
            },
            "description": "List of user object",
            "required": true,
          },
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Creates list of users with given input array",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
      "/user/login": Object {
        "get": Object {
          "operationId": "loginUser",
          "parameters": Array [
            Object {
              "description": "The user name for login",
              "in": "query",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
            Object {
              "description": "The password for login in clear text",
              "in": "query",
              "name": "password",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "type": "string",
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "type": "string",
                  },
                },
              },
              "description": "successful operation",
              "headers": Object {
                "X-Expires-After": Object {
                  "description": "date in UTC when token expires",
                  "schema": Object {
                    "format": "date-time",
                    "type": "string",
                  },
                },
                "X-Rate-Limit": Object {
                  "description": "calls per hour allowed by the user",
                  "schema": Object {
                    "format": "int32",
                    "type": "integer",
                  },
                },
              },
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid username/password supplied",
            },
          },
          "summary": "Logs user into the system",
          "tags": Array [
            "user",
          ],
        },
      },
      "/user/logout": Object {
        "get": Object {
          "operationId": "logoutUser",
          "responses": Object {
            "default": Object {
              "content": Object {},
              "description": "successful operation",
            },
          },
          "summary": "Logs out current logged in user session",
          "tags": Array [
            "user",
          ],
        },
      },
      "/user/{username}": Object {
        "delete": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "parameters": Array [
            Object {
              "description": "The name that needs to be deleted",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid username supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Delete user",
          "tags": Array [
            "user",
          ],
        },
        "get": Object {
          "operationId": "getUserByName",
          "parameters": Array [
            Object {
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                },
                "application/xml": Object {
                  "schema": Object {
                    "properties": Object {
                      "email": Object {
                        "type": "string",
                      },
                      "firstName": Object {
                        "type": "string",
                      },
                      "id": Object {
                        "format": "int64",
                        "type": "integer",
                      },
                      "lastName": Object {
                        "type": "string",
                      },
                      "password": Object {
                        "type": "string",
                      },
                      "phone": Object {
                        "type": "string",
                      },
                      "userStatus": Object {
                        "description": "User Status",
                        "format": "int32",
                        "type": "integer",
                      },
                      "username": Object {
                        "type": "string",
                      },
                    },
                    "type": "object",
                    "xml": Object {
                      "name": "User",
                    },
                  },
                },
              },
              "description": "successful operation",
            },
            "400": Object {
              "content": Object {},
              "description": "Invalid username supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Get user by user name",
          "tags": Array [
            "user",
          ],
        },
        "put": Object {
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "parameters": Array [
            Object {
              "description": "name that need to be updated",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": Object {
                "type": "string",
              },
            },
          ],
          "requestBody": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "type": "string",
                    },
                    "firstName": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "format": "int64",
                      "type": "integer",
                    },
                    "lastName": Object {
                      "type": "string",
                    },
                    "password": Object {
                      "type": "string",
                    },
                    "phone": Object {
                      "type": "string",
                    },
                    "userStatus": Object {
                      "description": "User Status",
                      "format": "int32",
                      "type": "integer",
                    },
                    "username": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                  "xml": Object {
                    "name": "User",
                  },
                },
              },
            },
            "description": "Updated user object",
            "required": true,
          },
          "responses": Object {
            "400": Object {
              "content": Object {},
              "description": "Invalid user supplied",
            },
            "404": Object {
              "content": Object {},
              "description": "User not found",
            },
          },
          "summary": "Updated user",
          "tags": Array [
            "user",
          ],
          "x-codegen-request-body-name": "body",
        },
      },
    },
    "servers": Array [
      Object {
        "url": "https://petstore.swagger.io/v2",
      },
      Object {
        "url": "http://petstore.swagger.io/v2",
      },
    ],
    "tags": Array [
      Object {
        "description": "Everything about your Pets",
        "externalDocs": Object {
          "description": "Find out more",
          "url": "http://swagger.io",
        },
        "name": "pet",
      },
      Object {
        "description": "Access to Petstore orders",
        "name": "store",
      },
      Object {
        "description": "Operations about user",
        "externalDocs": Object {
          "description": "Find out more about our store",
          "url": "http://swagger.io",
        },
        "name": "user",
      },
    ],
  },
  "sourcemap": JsonSchemaSourcemap {
    "files": Array [
      Object {
        "ast": null,
        "index": 0,
        "path": "/inputs/openapi3/petstore0.json",
      },
    ],
    "refMappings": Array [
      Array [
        Array [
          "paths",
          "/pet/{petId}/uploadImage",
          "post",
          "responses",
          "200",
          "content",
          "application/json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "ApiResponse",
        ],
      ],
      Array [
        Array [
          "paths",
          "/store/order",
          "post",
          "requestBody",
          "content",
          "*/*",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Order",
        ],
      ],
      Array [
        Array [
          "paths",
          "/store/order",
          "post",
          "responses",
          "200",
          "content",
          "application/xml",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Order",
        ],
      ],
      Array [
        Array [
          "paths",
          "/store/order",
          "post",
          "responses",
          "200",
          "content",
          "application/json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Order",
        ],
      ],
      Array [
        Array [
          "paths",
          "/store/order/{orderId}",
          "get",
          "responses",
          "200",
          "content",
          "application/xml",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Order",
        ],
      ],
      Array [
        Array [
          "paths",
          "/store/order/{orderId}",
          "get",
          "responses",
          "200",
          "content",
          "application/json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Order",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user",
          "post",
          "requestBody",
          "content",
          "*/*",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user/createWithArray",
          "post",
          "requestBody",
          "content",
          "*/*",
          "schema",
          "items",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user/createWithList",
          "post",
          "requestBody",
          "content",
          "*/*",
          "schema",
          "items",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user/{username}",
          "get",
          "responses",
          "200",
          "content",
          "application/xml",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user/{username}",
          "get",
          "responses",
          "200",
          "content",
          "application/json",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "paths",
          "/user/{username}",
          "put",
          "requestBody",
          "content",
          "*/*",
          "schema",
        ],
        0,
        Array [
          "components",
          "schemas",
          "User",
        ],
      ],
      Array [
        Array [
          "components",
          "schemas",
          "Pet",
          "properties",
          "category",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Category",
        ],
      ],
      Array [
        Array [
          "components",
          "schemas",
          "Pet",
          "properties",
          "tags",
          "items",
        ],
        0,
        Array [
          "components",
          "schemas",
          "Tag",
        ],
      ],
    ],
    "rootFilePath": "/inputs/openapi3/petstore0.json",
  },
}
`;

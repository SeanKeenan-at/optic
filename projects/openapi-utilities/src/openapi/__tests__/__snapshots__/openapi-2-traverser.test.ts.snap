// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can extract facts from azure example 1 1`] = `
Array [
  Object {
    "location": Object {
      "conceptualLocation": Object {},
      "conceptualPath": Array [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": Object {
      "consumes": Array [
        "application/json",
      ],
      "info": Object {
        "description": "Use these REST APIs for performing operations on entities like API, Product, and Subscription associated with your Azure API Management deployment.",
        "title": "ApiManagementClient",
        "version": "2017-03-01",
      },
      "openapi": "2.0",
      "parameters": Object {
        "ApiVersionParameter": Object {
          "description": "Version of the API to be used with the client request.",
          "in": "query",
          "name": "api-version",
          "required": true,
          "type": "string",
        },
        "PolicyIdParameter": Object {
          "description": "The identifier of the Policy.",
          "enum": Array [
            "policy",
          ],
          "in": "path",
          "name": "policyId",
          "required": true,
          "type": "string",
          "x-ms-enum": Object {
            "modelAsString": true,
            "name": "PolicyIdName",
          },
          "x-ms-parameter-location": "method",
        },
        "SkipQueryParameter": Object {
          "description": "Number of records to skip.",
          "format": "int32",
          "in": "query",
          "minimum": 0,
          "name": "$skip",
          "required": false,
          "type": "integer",
          "x-ms-parameter-location": "method",
        },
        "TopQueryParameter": Object {
          "description": "Number of records to return.",
          "format": "int32",
          "in": "query",
          "minimum": 1,
          "name": "$top",
          "required": false,
          "type": "integer",
          "x-ms-parameter-location": "method",
        },
      },
      "produces": Array [
        "application/json",
      ],
      "swagger": "2.0",
      "x-ms-parameterized-host": Object {
        "hostTemplate": "{apimBaseUrl}",
        "parameters": Array [
          Object {
            "description": "The management endpoint of the API Management service, for example https://myapimservice.management.azure-api.net.",
            "in": "path",
            "name": "apimBaseUrl",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
          },
        ],
        "positionInOperation": "first",
        "useSchemePrefix": false,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/policies",
      },
      "conceptualPath": Array [
        "operations",
        "/policies",
        "get",
      ],
      "jsonPath": "/paths/~1policies/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Lists all the Global Policy definitions of the Api Management service.",
      "method": "get",
      "operationId": "Policy_List",
      "pathPattern": "/policies",
      "tags": Array [
        "Policy",
      ],
      "x-ms-pageable": Object {
        "nextLinkName": null,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "scope",
        },
        "method": "get",
        "path": "/policies",
      },
      "conceptualPath": Array [
        "operations",
        "/policies",
        "get",
        "parameters",
        "query",
        "scope",
      ],
      "jsonPath": "/paths/~1policies/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Policy scope.",
      "enum": Array [
        "Tenant",
        "Product",
        "Api",
        "Operation",
        "All",
      ],
      "in": "query",
      "name": "scope",
      "required": false,
      "type": "string",
      "x-ms-enum": Object {
        "modelAsString": false,
        "name": "PolicyScopeContract",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "get",
        "path": "/policies",
      },
      "conceptualPath": Array [
        "operations",
        "/policies",
        "get",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1policies/get/parameters/1",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies",
      },
      "conceptualPath": Array [
        "operations",
        "/policies",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "The response of the list policy operation.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies",
      },
      "conceptualPath": Array [
        "operations",
        "/policies",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1policies/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "Returns an array of Policy Contracts.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Get the Global policy definition of the Api Management service.",
      "method": "get",
      "operationId": "Policy_Get",
      "pathPattern": "/policies/{policyId}",
      "produces": Array [
        "application/json",
        "application/vnd.ms-azure-apim.policy+xml",
        "application/vnd.ms-azure-apim.policy.raw+xml",
      ],
      "tags": Array [
        "Policy",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "policyId",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "parameters",
        "path",
        "policyId",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The identifier of the Policy.",
      "enum": Array [
        "policy",
      ],
      "in": "path",
      "name": "policyId",
      "required": true,
      "type": "string",
      "x-ms-enum": Object {
        "modelAsString": true,
        "name": "PolicyIdName",
      },
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/parameters/1",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "header": "ETag",
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "200",
        "headers",
        "ETag",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/200/headers/ETag",
      "kind": "response-header",
    },
    "value": Object {
      "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
      "name": "ETag",
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy+xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "200",
        "application/vnd.ms-azure-apim.policy+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy+xml",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "200",
        "application/vnd.ms-azure-apim.policy.raw+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "Returns the Policy Contracts.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error Body contract.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy+xml",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "default",
        "application/vnd.ms-azure-apim.policy+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy+xml",
      "flatSchema": Object {
        "description": "Error Body contract.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "default",
        "application/vnd.ms-azure-apim.policy.raw+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
      "flatSchema": Object {
        "description": "Error Body contract.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/get/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put",
      "kind": "operation",
    },
    "value": Object {
      "consumes": Array [
        "application/json",
        "application/vnd.ms-azure-apim.policy+xml",
        "application/vnd.ms-azure-apim.policy.raw+xml",
      ],
      "description": "Creates or updates the global policy configuration of the Api Management service.",
      "method": "put",
      "operationId": "Policy_CreateOrUpdate",
      "pathPattern": "/policies/{policyId}",
      "tags": Array [
        "Policy",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "policyId",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "parameters",
        "path",
        "policyId",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The identifier of the Policy.",
      "enum": Array [
        "policy",
      ],
      "in": "path",
      "name": "policyId",
      "required": true,
      "type": "string",
      "x-ms-enum": Object {
        "modelAsString": true,
        "name": "PolicyIdName",
      },
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/2",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/1",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy+xml",
          },
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "application/vnd.ms-azure-apim.policy+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/1",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy+xml",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
          },
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "application/vnd.ms-azure-apim.policy.raw+xml",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/1",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/vnd.ms-azure-apim.policy.raw+xml",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {},
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "requestBody",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/parameters/1",
      "kind": "request",
    },
    "value": Object {
      "description": "The policy contents to apply.",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "Global policy configuration of the Api Management service was successfully updated.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "201",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/201",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Policy contract Properties.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "201",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "201",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/201",
      "kind": "response",
    },
    "value": Object {
      "description": "Global policy configuration was successfully created.",
      "statusCode": "201",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error Body contract.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "put",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "put",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/put/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete",
      "kind": "operation",
    },
    "value": Object {
      "description": "Deletes the global policy configuration of the Api Management Service.",
      "method": "delete",
      "operationId": "Policy_Delete",
      "pathPattern": "/policies/{policyId}",
      "tags": Array [
        "Policy",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "policyId",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "parameters",
        "path",
        "policyId",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The identifier of the Policy.",
      "enum": Array [
        "policy",
      ],
      "in": "path",
      "name": "policyId",
      "required": true,
      "type": "string",
      "x-ms-enum": Object {
        "modelAsString": true,
        "name": "PolicyIdName",
      },
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "header": "If-Match",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "parameters",
        "header",
        "If-Match",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/parameters/1",
      "kind": "header-parameter",
    },
    "value": Object {
      "description": "The entity state (Etag) version of the policy to be deleted. A value of \\"*\\" can be used for If-Match to unconditionally apply the operation.",
      "in": "header",
      "name": "If-Match",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/parameters/2",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "204",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "responses",
        "204",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/responses/204",
      "kind": "response",
    },
    "value": Object {
      "description": "Successfully deleted the policy configuration at the Global level.",
      "statusCode": "204",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error Body contract.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "delete",
        "path": "/policies/{policyId}",
      },
      "conceptualPath": Array [
        "operations",
        "/policies/{}",
        "delete",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1policies~1{policyId}/delete/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/policySnippets",
      },
      "conceptualPath": Array [
        "operations",
        "/policySnippets",
        "get",
      ],
      "jsonPath": "/paths/~1policySnippets/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Lists all policy snippets.",
      "method": "get",
      "operationId": "PolicySnippets_List",
      "pathPattern": "/policySnippets",
      "tags": Array [
        "PolicySnippets",
      ],
      "x-ms-pageable": Object {
        "nextLinkName": null,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "scope",
        },
        "method": "get",
        "path": "/policySnippets",
      },
      "conceptualPath": Array [
        "operations",
        "/policySnippets",
        "get",
        "parameters",
        "query",
        "scope",
      ],
      "jsonPath": "/paths/~1policySnippets/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Policy scope.",
      "enum": Array [
        "Tenant",
        "Product",
        "Api",
        "Operation",
        "All",
      ],
      "in": "query",
      "name": "scope",
      "required": false,
      "type": "string",
      "x-ms-enum": Object {
        "modelAsString": false,
        "name": "PolicyScopeContract",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "get",
        "path": "/policySnippets",
      },
      "conceptualPath": Array [
        "operations",
        "/policySnippets",
        "get",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1policySnippets/get/parameters/1",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policySnippets",
      },
      "conceptualPath": Array [
        "operations",
        "/policySnippets",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1policySnippets/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "The response of the list policy snippets operation.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/policySnippets",
      },
      "conceptualPath": Array [
        "operations",
        "/policySnippets",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1policySnippets/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "Returns an array of Policy Contracts.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/regions",
      },
      "conceptualPath": Array [
        "operations",
        "/regions",
        "get",
      ],
      "jsonPath": "/paths/~1regions/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Lists all azure regions in which the service exists.",
      "method": "get",
      "operationId": "Regions_List",
      "pathPattern": "/regions",
      "tags": Array [
        "Regions",
      ],
      "x-ms-pageable": Object {
        "nextLinkName": "",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "api-version",
        },
        "method": "get",
        "path": "/regions",
      },
      "conceptualPath": Array [
        "operations",
        "/regions",
        "get",
        "parameters",
        "query",
        "api-version",
      ],
      "jsonPath": "/paths/~1regions/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "Version of the API to be used with the client request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/regions",
      },
      "conceptualPath": Array [
        "operations",
        "/regions",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1regions/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Lists Regions operation response details.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/regions",
      },
      "conceptualPath": Array [
        "operations",
        "/regions",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1regions/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "Lists of Regions in which the service is deployed.",
      "statusCode": "200",
    },
  },
]
`;

exports[`can extract facts from azure example 2 1`] = `
Array [
  Object {
    "location": Object {
      "conceptualLocation": Object {},
      "conceptualPath": Array [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": Object {
      "consumes": Array [
        "application/json",
      ],
      "host": "quantum.azure.com",
      "info": Object {
        "description": "Azure Quantum REST API client",
        "title": "Quantum Client",
        "version": "2021-11-01-preview",
      },
      "openapi": "2.0",
      "parameters": Object {
        "jobIdParameter": Object {
          "description": "Id of the job.",
          "in": "path",
          "name": "jobId",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method",
        },
        "resourceGroupNameParameter": Object {
          "description": "Name of an Azure resource group.",
          "in": "path",
          "name": "resourceGroupName",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client",
        },
        "subscriptionIdParameter": Object {
          "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "in": "path",
          "name": "subscriptionId",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client",
        },
        "workspaceNameParameter": Object {
          "description": "Name of the workspace.",
          "in": "path",
          "name": "workspaceName",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client",
        },
      },
      "produces": Array [
        "application/json",
      ],
      "swagger": "2.0",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "List jobs.",
      "method": "get",
      "operationId": "Jobs_List",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      "x-ms-pageable": Object {
        "nextLinkName": "nextLink",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "List of job details.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "The operation completed successfully.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Get job by id",
      "method": "get",
      "operationId": "Jobs_Get",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "jobId",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "parameters",
        "path",
        "jobId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/parameters/3",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Id of the job.",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Job details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job id.",
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job name. Is not required for the name to be unique and it's only used for display purposes.",
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "containerUri",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "containerUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/containerUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob container SAS uri, the container is used to host job data.",
        "type": "string",
      },
      "key": "containerUri",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataUri",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "inputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/inputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input blob SAS uri, if specified, it will override the default input blob in the container.",
        "type": "string",
      },
      "key": "inputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataFormat",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "inputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/inputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the input data.",
        "type": "string",
      },
      "key": "inputDataFormat",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputParams",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "inputParams",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/inputParams",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data.",
        "type": "object",
      },
      "key": "inputParams",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "providerId",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "providerId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/providerId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The unique identifier for the provider.",
        "type": "string",
      },
      "key": "providerId",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "target",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "target",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/target",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The target identifier to run the job.",
        "type": "string",
      },
      "key": "target",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "metadata",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "metadata",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/metadata",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "description": "The job metadata. Metadata provides client the ability to store client-specific information",
        "type": "object",
        "x-nullable": true,
      },
      "key": "metadata",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataUri",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "outputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/outputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob.",
        "type": "string",
      },
      "key": "outputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataFormat",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "outputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/outputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the output data.",
        "type": "string",
      },
      "key": "outputDataFormat",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job status.",
        "enum": Array [
          "Waiting",
          "Executing",
          "Succeeded",
          "Failed",
          "Cancelled",
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": Object {
          "modelAsString": true,
          "name": "JobStatus",
        },
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "creationTime",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "creationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/creationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The creation time of the job.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
      },
      "key": "creationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "beginExecutionTime",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "beginExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/beginExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job began execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "beginExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "endExecutionTime",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "endExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/endExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job finished execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "endExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "cancellationTime",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "cancellationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/cancellationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when a job was successfully cancelled.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "cancellationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "costEstimate",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "costEstimate",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/costEstimate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "costEstimate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "errorData",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "errorData",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/errorData",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The error data for the job. This is expected only when Status 'Failed'.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "errorData",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "List of user-supplied tags associated with the job.",
        "type": "array",
        "x-nullable": true,
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "OK",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/get/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch",
      "kind": "operation",
    },
    "value": Object {
      "description": "Patch a job.",
      "method": "patch",
      "operationId": "Jobs_Patch",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "jobId",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "parameters",
        "path",
        "jobId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/3",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Id of the job.",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/4",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "array",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {},
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "requestBody",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/parameters/4",
      "kind": "request",
    },
    "value": Object {
      "description": "The json patch document containing the patch operations.",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Job details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job id.",
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job name. Is not required for the name to be unique and it's only used for display purposes.",
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "containerUri",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "containerUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/containerUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob container SAS uri, the container is used to host job data.",
        "type": "string",
      },
      "key": "containerUri",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataUri",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "inputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/inputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input blob SAS uri, if specified, it will override the default input blob in the container.",
        "type": "string",
      },
      "key": "inputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataFormat",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "inputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/inputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the input data.",
        "type": "string",
      },
      "key": "inputDataFormat",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputParams",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "inputParams",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/inputParams",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data.",
        "type": "object",
      },
      "key": "inputParams",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "providerId",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "providerId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/providerId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The unique identifier for the provider.",
        "type": "string",
      },
      "key": "providerId",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "target",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "target",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/target",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The target identifier to run the job.",
        "type": "string",
      },
      "key": "target",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "metadata",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "metadata",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/metadata",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "description": "The job metadata. Metadata provides client the ability to store client-specific information",
        "type": "object",
        "x-nullable": true,
      },
      "key": "metadata",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataUri",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "outputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/outputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob.",
        "type": "string",
      },
      "key": "outputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataFormat",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "outputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/outputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the output data.",
        "type": "string",
      },
      "key": "outputDataFormat",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job status.",
        "enum": Array [
          "Waiting",
          "Executing",
          "Succeeded",
          "Failed",
          "Cancelled",
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": Object {
          "modelAsString": true,
          "name": "JobStatus",
        },
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "creationTime",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "creationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/creationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The creation time of the job.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
      },
      "key": "creationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "beginExecutionTime",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "beginExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/beginExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job began execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "beginExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "endExecutionTime",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "endExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/endExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job finished execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "endExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "cancellationTime",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "cancellationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/cancellationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when a job was successfully cancelled.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "cancellationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "costEstimate",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "costEstimate",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/costEstimate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "costEstimate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "errorData",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "errorData",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/errorData",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The error data for the job. This is expected only when Status 'Failed'.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "errorData",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "List of user-supplied tags associated with the job.",
        "type": "array",
        "x-nullable": true,
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "OK",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "204",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "204",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/204",
      "kind": "response",
    },
    "value": Object {
      "description": "No Content - the patch body was empty or had no operations.",
      "statusCode": "204",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "patch",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "patch",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/patch/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put",
      "kind": "operation",
    },
    "value": Object {
      "description": "Create a job.",
      "method": "put",
      "operationId": "Jobs_Create",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "jobId",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "parameters",
        "path",
        "jobId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/3",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Id of the job.",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Job details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job id.",
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job name. Is not required for the name to be unique and it's only used for display purposes.",
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "containerUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "containerUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/containerUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob container SAS uri, the container is used to host job data.",
        "type": "string",
      },
      "key": "containerUri",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "inputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "inputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/inputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input blob SAS uri, if specified, it will override the default input blob in the container.",
        "type": "string",
      },
      "key": "inputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "inputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "inputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/inputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the input data.",
        "type": "string",
      },
      "key": "inputDataFormat",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "inputParams",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "inputParams",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/inputParams",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data.",
        "type": "object",
      },
      "key": "inputParams",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "providerId",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "providerId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/providerId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The unique identifier for the provider.",
        "type": "string",
      },
      "key": "providerId",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "target",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "target",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/target",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The target identifier to run the job.",
        "type": "string",
      },
      "key": "target",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "metadata",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "metadata",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/metadata",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "description": "The job metadata. Metadata provides client the ability to store client-specific information",
        "type": "object",
        "x-nullable": true,
      },
      "key": "metadata",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "outputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "outputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/outputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob.",
        "type": "string",
      },
      "key": "outputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "outputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "outputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/outputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the output data.",
        "type": "string",
      },
      "key": "outputDataFormat",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job status.",
        "enum": Array [
          "Waiting",
          "Executing",
          "Succeeded",
          "Failed",
          "Cancelled",
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": Object {
          "modelAsString": true,
          "name": "JobStatus",
        },
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "creationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "creationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/creationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The creation time of the job.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
      },
      "key": "creationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "beginExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "beginExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/beginExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job began execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "beginExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "endExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "endExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/endExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job finished execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "endExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "cancellationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "cancellationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/cancellationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when a job was successfully cancelled.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "cancellationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "costEstimate",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "costEstimate",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/costEstimate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "costEstimate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "errorData",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "errorData",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/errorData",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The error data for the job. This is expected only when Status 'Failed'.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "errorData",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "List of user-supplied tags associated with the job.",
        "type": "array",
        "x-nullable": true,
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {},
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "requestBody",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/parameters/4",
      "kind": "request",
    },
    "value": Object {
      "description": "The complete metadata of the job to submit.",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Job details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job id.",
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job name. Is not required for the name to be unique and it's only used for display purposes.",
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "containerUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "containerUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/containerUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob container SAS uri, the container is used to host job data.",
        "type": "string",
      },
      "key": "containerUri",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "inputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/inputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input blob SAS uri, if specified, it will override the default input blob in the container.",
        "type": "string",
      },
      "key": "inputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "inputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/inputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the input data.",
        "type": "string",
      },
      "key": "inputDataFormat",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "inputParams",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "inputParams",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/inputParams",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data.",
        "type": "object",
      },
      "key": "inputParams",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "providerId",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "providerId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/providerId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The unique identifier for the provider.",
        "type": "string",
      },
      "key": "providerId",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "target",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "target",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/target",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The target identifier to run the job.",
        "type": "string",
      },
      "key": "target",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "metadata",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "metadata",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/metadata",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "description": "The job metadata. Metadata provides client the ability to store client-specific information",
        "type": "object",
        "x-nullable": true,
      },
      "key": "metadata",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "outputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/outputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob.",
        "type": "string",
      },
      "key": "outputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "outputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "outputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/outputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the output data.",
        "type": "string",
      },
      "key": "outputDataFormat",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job status.",
        "enum": Array [
          "Waiting",
          "Executing",
          "Succeeded",
          "Failed",
          "Cancelled",
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": Object {
          "modelAsString": true,
          "name": "JobStatus",
        },
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "creationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "creationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/creationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The creation time of the job.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
      },
      "key": "creationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "beginExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "beginExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/beginExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job began execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "beginExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "endExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "endExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/endExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job finished execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "endExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "cancellationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "cancellationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/cancellationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when a job was successfully cancelled.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "cancellationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "costEstimate",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "costEstimate",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/costEstimate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "costEstimate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "errorData",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "errorData",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/errorData",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The error data for the job. This is expected only when Status 'Failed'.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "errorData",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "List of user-supplied tags associated with the job.",
        "type": "array",
        "x-nullable": true,
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "OK",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Job details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job id.",
        "type": "string",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job name. Is not required for the name to be unique and it's only used for display purposes.",
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "containerUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "containerUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/containerUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob container SAS uri, the container is used to host job data.",
        "type": "string",
      },
      "key": "containerUri",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "inputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "inputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/inputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input blob SAS uri, if specified, it will override the default input blob in the container.",
        "type": "string",
      },
      "key": "inputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "inputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "inputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/inputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the input data.",
        "type": "string",
      },
      "key": "inputDataFormat",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "inputParams",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "inputParams",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/inputParams",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The input parameters for the job. JSON object used by the target solver. It is expected that the size of this object is small and only used to specify parameters for the execution target, not the input data.",
        "type": "object",
      },
      "key": "inputParams",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "providerId",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "providerId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/providerId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The unique identifier for the provider.",
        "type": "string",
      },
      "key": "providerId",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "target",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "target",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/target",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The target identifier to run the job.",
        "type": "string",
      },
      "key": "target",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "metadata",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "metadata",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/metadata",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "additionalProperties": Object {
          "type": "string",
        },
        "description": "The job metadata. Metadata provides client the ability to store client-specific information",
        "type": "object",
        "x-nullable": true,
      },
      "key": "metadata",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "outputDataUri",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "outputDataUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/outputDataUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The output blob SAS uri. When a job finishes successfully, results will be uploaded to this blob.",
        "type": "string",
      },
      "key": "outputDataUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "outputDataFormat",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "outputDataFormat",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/outputDataFormat",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The format of the output data.",
        "type": "string",
      },
      "key": "outputDataFormat",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job status.",
        "enum": Array [
          "Waiting",
          "Executing",
          "Succeeded",
          "Failed",
          "Cancelled",
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": Object {
          "modelAsString": true,
          "name": "JobStatus",
        },
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "creationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "creationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/creationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The creation time of the job.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
      },
      "key": "creationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "beginExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "beginExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/beginExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job began execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "beginExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "endExecutionTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "endExecutionTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/endExecutionTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when the job finished execution.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "endExecutionTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "cancellationTime",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "cancellationTime",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/cancellationTime",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The time when a job was successfully cancelled.",
        "format": "date-time",
        "readOnly": true,
        "type": "string",
        "x-nullable": true,
      },
      "key": "cancellationTime",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "costEstimate",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "costEstimate",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/costEstimate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The job cost billed by the provider. The final cost on your bill might be slightly different due to added taxes and currency conversion rates.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "costEstimate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "errorData",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "errorData",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/errorData",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The error data for the job. This is expected only when Status 'Failed'.",
        "readOnly": true,
        "type": undefined,
        "x-nullable": true,
      },
      "key": "errorData",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "201",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "List of user-supplied tags associated with the job.",
        "type": "array",
        "x-nullable": true,
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "201",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "201",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/201",
      "kind": "response",
    },
    "value": Object {
      "description": "Created",
      "statusCode": "201",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "put",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "put",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/put/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete",
      "kind": "operation",
    },
    "value": Object {
      "description": "Cancel a job.",
      "method": "delete",
      "operationId": "Jobs_Cancel",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "jobId",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "parameters",
        "path",
        "jobId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/parameters/3",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Id of the job.",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "204",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "responses",
        "204",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/responses/204",
      "kind": "response",
    },
    "value": Object {
      "description": "NoContent - The job was successfully cancelled.",
      "statusCode": "204",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "delete",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/jobs/{jobId}",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/jobs/{}",
        "delete",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1jobs~1{jobId}/delete/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Get provider status.",
      "method": "get",
      "operationId": "Providers_GetStatus",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      "x-ms-pageable": Object {
        "nextLinkName": "nextLink",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Providers status.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "The operation completed successfully.",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/providerStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/providerStatus",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1providerStatus/get/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post",
      "kind": "operation",
    },
    "value": Object {
      "description": "Gets a URL with SAS token for a container/blob in the storage account associated with the workspace. The SAS URL can be used to upload job input and/or download job output.",
      "method": "post",
      "operationId": "Storage_SasUri",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/3",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Blob details.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "containerName",
        ],
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "application/json",
        "containerName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/3/schema/properties/containerName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The container name.",
        "type": "string",
      },
      "key": "containerName",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "body": Object {
            "contentType": "application/json",
          },
        },
        "jsonSchemaTrail": Array [
          "blobName",
        ],
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "application/json",
        "blobName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/3/schema/properties/blobName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "The blob name.",
        "type": "string",
      },
      "key": "blobName",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {},
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "requestBody",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/parameters/3",
      "kind": "request",
    },
    "value": Object {
      "description": "The details (name and container) of the blob to store or download data.",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Get SAS URL operation response.",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "sasUri",
        ],
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "200",
        "application/json",
        "sasUri",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/200/schema/properties/sasUri",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "A URL with a SAS token to upload a blob for execution in the given workspace.",
        "type": "string",
      },
      "key": "sasUri",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "OK",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/storage/sasUri",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/storage/sasUri",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1storage~1sasUri/post/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "List quotas for the given workspace.",
      "method": "get",
      "operationId": "Quotas_List",
      "pathPattern": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      "x-ms-pageable": Object {
        "nextLinkName": "nextLink",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "subscriptionId",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "parameters",
        "path",
        "subscriptionId",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "resourceGroupName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "parameters",
        "path",
        "resourceGroupName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of an Azure resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "workspaceName",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "parameters",
        "path",
        "workspaceName",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/parameters/2",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "List of quotas.",
        "type": undefined,
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "OK",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "responses",
        "default",
        "application/json",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/responses/default",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "description": "Error information returned by the API",
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "default",
        },
        "jsonSchemaTrail": Array [
          "error",
        ],
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "responses",
        "default",
        "application/json",
        "error",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/responses/default/schema/properties/error",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "An error response from Azure.",
        "type": undefined,
      },
      "key": "error",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Quantum/workspaces/{workspaceName}/quotas",
      },
      "conceptualPath": Array [
        "operations",
        "/v1.0/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Quantum/workspaces/{}/quotas",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1v1.0~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Quantum~1workspaces~1{workspaceName}~1quotas/get/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "Error response describing why the operation failed.",
      "statusCode": "default",
    },
  },
]
`;

exports[`can extract facts from petstore example 1`] = `
Array [
  Object {
    "location": Object {
      "conceptualLocation": Object {},
      "conceptualPath": Array [],
      "jsonPath": "",
      "kind": "specification",
    },
    "value": Object {
      "basePath": "/v2",
      "externalDocs": Object {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io",
      },
      "host": "petstore.swagger.io",
      "info": Object {
        "contact": Object {
          "email": "apiteam@swagger.io",
        },
        "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key \`special-key\` to test the authorization     filters.",
        "license": Object {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
        },
        "termsOfService": "http://swagger.io/terms/",
        "title": "Swagger Petstore 2.0",
        "version": "1.0.0",
      },
      "openapi": "2.0",
      "swagger": "2.0",
      "tags": Array [
        Object {
          "description": "Everything about your Pets",
          "externalDocs": Object {
            "description": "Find out more",
            "url": "http://swagger.io",
          },
          "name": "pet",
        },
        Object {
          "description": "Access to Petstore orders",
          "name": "store",
        },
        Object {
          "description": "Operations about user",
          "externalDocs": Object {
            "description": "Find out more about our store",
            "url": "http://swagger.io",
          },
          "name": "user",
        },
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "post",
      ],
      "jsonPath": "/paths/~1pet/post",
      "kind": "operation",
    },
    "value": Object {
      "consumes": Array [
        "application/json",
        "application/xml",
      ],
      "description": "",
      "method": "post",
      "operationId": "addPet",
      "pathPattern": "/pet",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Add a new pet to the store",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "405",
        },
        "method": "post",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "post",
        "responses",
        "405",
      ],
      "jsonPath": "/paths/~1pet/post/responses/405",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid input",
      "statusCode": "405",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "put",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "put",
      ],
      "jsonPath": "/paths/~1pet/put",
      "kind": "operation",
    },
    "value": Object {
      "consumes": Array [
        "application/json",
        "application/xml",
      ],
      "description": "",
      "method": "put",
      "operationId": "updatePet",
      "pathPattern": "/pet",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Update an existing pet",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "put",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "put",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1pet/put/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "put",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "put",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1pet/put/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "Pet not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "405",
        },
        "method": "put",
        "path": "/pet",
      },
      "conceptualPath": Array [
        "operations",
        "/pet",
        "put",
        "responses",
        "405",
      ],
      "jsonPath": "/paths/~1pet/put/responses/405",
      "kind": "response",
    },
    "value": Object {
      "description": "Validation exception",
      "statusCode": "405",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Multiple status values can be provided with comma separated strings",
      "method": "get",
      "operationId": "findPetsByStatus",
      "pathPattern": "/pet/findByStatus",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Finds Pets by status",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "status",
        },
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "parameters",
        "query",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "collectionFormat": "multi",
      "description": "Status values that need to be considered for filter",
      "in": "query",
      "items": Object {
        "default": "available",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "name": "status",
      "required": true,
      "type": "array",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "array",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "status",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "array",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "status",
        ],
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200/schema/items/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/pet/findByStatus",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByStatus",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1pet~1findByStatus/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid status value",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get",
      "kind": "operation",
    },
    "value": Object {
      "deprecated": true,
      "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
      "method": "get",
      "operationId": "findPetsByTags",
      "pathPattern": "/pet/findByTags",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Finds Pets by tags",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "tags",
        },
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "parameters",
        "query",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "collectionFormat": "multi",
      "description": "Tags to filter by",
      "in": "query",
      "items": Object {
        "type": "string",
      },
      "name": "tags",
      "required": true,
      "type": "array",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "array",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "status",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/xml",
        "items",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "array",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "items",
          "status",
        ],
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
        "application/json",
        "items",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200/schema/items/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/pet/findByTags",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/findByTags",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1pet~1findByTags/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid tag value",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Returns a single pet",
      "method": "get",
      "operationId": "getPetById",
      "pathPattern": "/pet/{petId}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "api_key": Array [],
        },
      ],
      "summary": "Find pet by ID",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "petId",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "parameters",
        "path",
        "petId",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "ID of pet to return",
      "format": "int64",
      "in": "path",
      "name": "petId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Pet",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Pet",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "category",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Category",
        },
      },
      "key": "category",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "category",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "category",
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "category",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/category/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "example": "doggie",
        "type": "string",
      },
      "key": "name",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "photoUrls",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "photoUrls",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/photoUrls",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "photoUrl",
          "wrapped": true,
        },
      },
      "key": "photoUrls",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "tags",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "array",
        "xml": Object {
          "name": "tag",
          "wrapped": true,
        },
      },
      "key": "tags",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
          "items",
          "id",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "tags",
        "items",
        "id",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags/items/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "tags",
          "items",
          "name",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "tags",
        "items",
        "name",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/tags/items/properties/name",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "name",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "pet status in the store",
        "enum": Array [
          "available",
          "pending",
          "sold",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "get",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "get",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/get/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "Pet not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "post",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/post",
      "kind": "operation",
    },
    "value": Object {
      "consumes": Array [
        "application/x-www-form-urlencoded",
      ],
      "description": "",
      "method": "post",
      "operationId": "updatePetWithForm",
      "pathPattern": "/pet/{petId}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Updates a pet in the store with form data",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "petId",
        },
        "method": "post",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "post",
        "parameters",
        "path",
        "petId",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/post/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "ID of pet that needs to be updated",
      "format": "int64",
      "in": "path",
      "name": "petId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "405",
        },
        "method": "post",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "post",
        "responses",
        "405",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/post/responses/405",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid input",
      "statusCode": "405",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "delete",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/delete",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "delete",
      "operationId": "deletePet",
      "pathPattern": "/pet/{petId}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "Deletes a pet",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "header": "api_key",
        },
        "method": "delete",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "delete",
        "parameters",
        "header",
        "api_key",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/0",
      "kind": "header-parameter",
    },
    "value": Object {
      "in": "header",
      "name": "api_key",
      "required": false,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "petId",
        },
        "method": "delete",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "delete",
        "parameters",
        "path",
        "petId",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/delete/parameters/1",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "Pet id to delete",
      "format": "int64",
      "in": "path",
      "name": "petId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "delete",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "delete",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/delete/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "delete",
        "path": "/pet/{petId}",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}",
        "delete",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1pet~1{petId}/delete/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "Pet not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post",
      "kind": "operation",
    },
    "value": Object {
      "consumes": Array [
        "multipart/form-data",
      ],
      "description": "",
      "method": "post",
      "operationId": "uploadFile",
      "pathPattern": "/pet/{petId}/uploadImage",
      "produces": Array [
        "application/json",
      ],
      "security": Array [
        Object {
          "petstore_auth": Array [
            "write:pets",
            "read:pets",
          ],
        },
      ],
      "summary": "uploads an image",
      "tags": Array [
        "pet",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "petId",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "parameters",
        "path",
        "petId",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "ID of pet to update",
      "format": "int64",
      "in": "path",
      "name": "petId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "code",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "code",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/schema/properties/code",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int32",
        "type": "integer",
      },
      "key": "code",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "type",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "type",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/schema/properties/type",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "type",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "message",
        ],
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
        "application/json",
        "message",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200/schema/properties/message",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "message",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "post",
        "path": "/pet/{petId}/uploadImage",
      },
      "conceptualPath": Array [
        "operations",
        "/pet/{}/uploadImage",
        "post",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1pet~1{petId}~1uploadImage/post/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": Array [
        "operations",
        "/store/inventory",
        "get",
      ],
      "jsonPath": "/paths/~1store~1inventory/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "Returns a map of status codes to quantities",
      "method": "get",
      "operationId": "getInventory",
      "pathPattern": "/store/inventory",
      "produces": Array [
        "application/json",
      ],
      "security": Array [
        Object {
          "api_key": Array [],
        },
      ],
      "summary": "Returns pet inventories by status",
      "tags": Array [
        "store",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": Array [
        "operations",
        "/store/inventory",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1inventory/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "additionalProperties": Object {
          "format": "int32",
          "type": "integer",
        },
        "type": "object",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/inventory",
      },
      "conceptualPath": Array [
        "operations",
        "/store/inventory",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1inventory/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
      ],
      "jsonPath": "/paths/~1store~1order/post",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "post",
      "operationId": "placeOrder",
      "pathPattern": "/store/order",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Place an order for a pet",
      "tags": Array [
        "store",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Order",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/petId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/quantity",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/shipDate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "Order Status",
        "enum": Array [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/complete",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Order",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "petId",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/petId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "quantity",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/quantity",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "shipDate",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/shipDate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "Order Status",
        "enum": Array [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "complete",
        ],
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200/schema/properties/complete",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "post",
        "path": "/store/order",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order",
        "post",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order/post/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid Order",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
      "method": "get",
      "operationId": "getOrderById",
      "pathPattern": "/store/order/{orderId}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Find purchase order by ID",
      "tags": Array [
        "store",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "orderId",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "parameters",
        "path",
        "orderId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "ID of pet that needs to be fetched",
      "format": "int64",
      "in": "path",
      "maximum": 10,
      "minimum": 1,
      "name": "orderId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Order",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/petId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/quantity",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/shipDate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "Order Status",
        "enum": Array [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/complete",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "Order",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "petId",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "petId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/petId",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "petId",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "quantity",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "quantity",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/quantity",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int32",
        "type": "integer",
      },
      "key": "quantity",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "shipDate",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "shipDate",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/shipDate",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "date-time",
        "type": "string",
      },
      "key": "shipDate",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "status",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "status",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/status",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "Order Status",
        "enum": Array [
          "placed",
          "approved",
          "delivered",
        ],
        "type": "string",
      },
      "key": "status",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "complete",
        ],
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "complete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200/schema/properties/complete",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "default": false,
        "type": "boolean",
      },
      "key": "complete",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "get",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "get",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/get/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "Order not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete",
      "kind": "operation",
    },
    "value": Object {
      "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
      "method": "delete",
      "operationId": "deleteOrder",
      "pathPattern": "/store/order/{orderId}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Delete purchase order by ID",
      "tags": Array [
        "store",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "orderId",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "delete",
        "parameters",
        "path",
        "orderId",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "ID of the order that needs to be deleted",
      "format": "int64",
      "in": "path",
      "minimum": 1,
      "name": "orderId",
      "required": true,
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "delete",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid ID supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "delete",
        "path": "/store/order/{orderId}",
      },
      "conceptualPath": Array [
        "operations",
        "/store/order/{}",
        "delete",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1store~1order~1{orderId}/delete/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "Order not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": Array [
        "operations",
        "/user",
        "post",
      ],
      "jsonPath": "/paths/~1user/post",
      "kind": "operation",
    },
    "value": Object {
      "description": "This can only be done by the logged in user.",
      "method": "post",
      "operationId": "createUser",
      "pathPattern": "/user",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Create user",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user",
      },
      "conceptualPath": Array [
        "operations",
        "/user",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user/post/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": Array [
        "operations",
        "/user/createWithArray",
        "post",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "post",
      "operationId": "createUsersWithArrayInput",
      "pathPattern": "/user/createWithArray",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Creates list of users with given input array",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user/createWithArray",
      },
      "conceptualPath": Array [
        "operations",
        "/user/createWithArray",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1createWithArray/post/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": Array [
        "operations",
        "/user/createWithList",
        "post",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "post",
      "operationId": "createUsersWithListInput",
      "pathPattern": "/user/createWithList",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Creates list of users with given input array",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "post",
        "path": "/user/createWithList",
      },
      "conceptualPath": Array [
        "operations",
        "/user/createWithList",
        "post",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1createWithList/post/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
      ],
      "jsonPath": "/paths/~1user~1login/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "get",
      "operationId": "loginUser",
      "pathPattern": "/user/login",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Logs user into the system",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "username",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "parameters",
        "query",
        "username",
      ],
      "jsonPath": "/paths/~1user~1login/get/parameters/0",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "The user name for login",
      "in": "query",
      "name": "username",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "query": "password",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "parameters",
        "query",
        "password",
      ],
      "jsonPath": "/paths/~1user~1login/get/parameters/1",
      "kind": "query-parameter",
    },
    "value": Object {
      "description": "The password for login in clear text",
      "in": "query",
      "name": "password",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "header": "X-Rate-Limit",
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "headers",
        "X-Rate-Limit",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Rate-Limit",
      "kind": "response-header",
    },
    "value": Object {
      "description": "calls per hour allowed by the user",
      "format": "int32",
      "name": "X-Rate-Limit",
      "type": "integer",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "header": "X-Expires-After",
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "headers",
        "X-Expires-After",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200/headers/X-Expires-After",
      "kind": "response-header",
    },
    "value": Object {
      "description": "date in UTC when token expires",
      "format": "date-time",
      "name": "X-Expires-After",
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "string",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "string",
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/user/login",
      },
      "conceptualPath": Array [
        "operations",
        "/user/login",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1login/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid username/password supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/user/logout",
      },
      "conceptualPath": Array [
        "operations",
        "/user/logout",
        "get",
      ],
      "jsonPath": "/paths/~1user~1logout/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "get",
      "operationId": "logoutUser",
      "pathPattern": "/user/logout",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Logs out current logged in user session",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "default",
        },
        "method": "get",
        "path": "/user/logout",
      },
      "conceptualPath": Array [
        "operations",
        "/user/logout",
        "get",
        "responses",
        "default",
      ],
      "jsonPath": "/paths/~1user~1logout/get/responses/default",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "default",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
      ],
      "jsonPath": "/paths/~1user~1{username}/get",
      "kind": "operation",
    },
    "value": Object {
      "description": "",
      "method": "get",
      "operationId": "getUserByName",
      "pathPattern": "/user/{username}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Get user by user name",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "username",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The name that needs to be fetched. Use user1 for testing. ",
      "in": "path",
      "name": "username",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/xml",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "User",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/username",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/firstName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/lastName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/email",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/password",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/phone",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/xml",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/xml",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/userStatus",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200",
      "kind": "body",
    },
    "value": Object {
      "contentType": "application/json",
      "flatSchema": Object {
        "type": "object",
        "xml": Object {
          "name": "User",
        },
      },
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "id",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "id",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/id",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "format": "int64",
        "type": "integer",
      },
      "key": "id",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "username",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/username",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "username",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "firstName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "firstName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/firstName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "firstName",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "lastName",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "lastName",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/lastName",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "lastName",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "email",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "email",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/email",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "email",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "password",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "password",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/password",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "password",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "phone",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "phone",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/phone",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "type": "string",
      },
      "key": "phone",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "body": Object {
            "contentType": "application/json",
          },
          "statusCode": "200",
        },
        "jsonSchemaTrail": Array [
          "userStatus",
        ],
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
        "application/json",
        "userStatus",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200/schema/properties/userStatus",
      "kind": "field",
    },
    "value": Object {
      "flatSchema": Object {
        "description": "User Status",
        "format": "int32",
        "type": "integer",
      },
      "key": "userStatus",
      "required": false,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "200",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "200",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/200",
      "kind": "response",
    },
    "value": Object {
      "description": "successful operation",
      "statusCode": "200",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid username supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "get",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "get",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/get/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "User not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "put",
      ],
      "jsonPath": "/paths/~1user~1{username}/put",
      "kind": "operation",
    },
    "value": Object {
      "description": "This can only be done by the logged in user.",
      "method": "put",
      "operationId": "updateUser",
      "pathPattern": "/user/{username}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Updated user",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "username",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "put",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "name that need to be updated",
      "in": "path",
      "name": "username",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {},
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "put",
        "requestBody",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/parameters/1",
      "kind": "request",
    },
    "value": Object {
      "description": "Updated user object",
      "required": true,
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "put",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid user supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "put",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "put",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/put/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "User not found",
      "statusCode": "404",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "delete",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete",
      "kind": "operation",
    },
    "value": Object {
      "description": "This can only be done by the logged in user.",
      "method": "delete",
      "operationId": "deleteUser",
      "pathPattern": "/user/{username}",
      "produces": Array [
        "application/xml",
        "application/json",
      ],
      "summary": "Delete user",
      "tags": Array [
        "user",
      ],
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inRequest": Object {
          "path": "username",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "delete",
        "parameters",
        "path",
        "username",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/parameters/0",
      "kind": "path-parameter",
    },
    "value": Object {
      "description": "The name that needs to be deleted",
      "in": "path",
      "name": "username",
      "required": true,
      "type": "string",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "400",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "delete",
        "responses",
        "400",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/responses/400",
      "kind": "response",
    },
    "value": Object {
      "description": "Invalid username supplied",
      "statusCode": "400",
    },
  },
  Object {
    "location": Object {
      "conceptualLocation": Object {
        "inResponse": Object {
          "statusCode": "404",
        },
        "method": "delete",
        "path": "/user/{username}",
      },
      "conceptualPath": Array [
        "operations",
        "/user/{}",
        "delete",
        "responses",
        "404",
      ],
      "jsonPath": "/paths/~1user~1{username}/delete/responses/404",
      "kind": "response",
    },
    "value": Object {
      "description": "User not found",
      "statusCode": "404",
    },
  },
]
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`body properties breaking changes fails if a property is removed 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {
                      "count": Object {
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "changeType": "removed",
      "location": Object {
        "conceptualLocation": Object {
          "inResponse": Object {
            "body": Object {
              "contentType": "application/json",
            },
            "statusCode": "200",
          },
          "jsonSchemaTrail": Array [
            "count",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "responses",
          "200",
          "application/json",
          "count",
        ],
        "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
        "kind": "field",
      },
      "removed": Object {
        "before": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "count",
          "required": false,
        },
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "responses": Object {
            "200": Object {
              "content": Object {
                "application/json": Object {
                  "schema": Object {
                    "properties": Object {},
                    "type": "object",
                  },
                },
              },
              "description": "",
            },
          },
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "changeType": "removed",
        "location": Object {
          "conceptualLocation": Object {
            "inResponse": Object {
              "body": Object {
                "contentType": "application/json",
              },
              "statusCode": "200",
            },
            "jsonSchemaTrail": Array [
              "count",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "responses",
            "200",
            "application/json",
            "count",
          ],
          "jsonPath": "/paths/~1example/get/responses/200/content/application~1json/schema/properties/count",
          "kind": "field",
        },
        "removed": Object {
          "before": Object {
            "flatSchema": Object {
              "type": "number",
            },
            "key": "count",
            "required": false,
          },
        },
      },
      "condition": "not be removed",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "Cannot read property 'key' of undefined",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "removed field: count",
    },
  ],
}
`;

exports[`body properties breaking changes fails if a required property is added 1`] = `
Object {
  "base": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {},
                  "type": "object",
                },
              },
            },
          },
          "responses": Object {},
        },
      },
    },
  },
  "changelog": Array [
    Object {
      "added": Object {
        "flatSchema": Object {
          "type": "number",
        },
        "key": "count",
        "required": true,
      },
      "changeType": "added",
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "body": Object {
              "contentType": "application/json",
            },
          },
          "jsonSchemaTrail": Array [
            "count",
          ],
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
          "application/json",
          "count",
        ],
        "jsonPath": "/paths/~1example/get/requestBody/content/application~1json/schema/properties/count",
        "kind": "field",
      },
    },
    Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "method": "get",
          "pathPattern": "/example",
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "count": Object {
                      "type": "number",
                    },
                  },
                  "required": Array [
                    "count",
                  ],
                  "type": "object",
                },
              },
            },
          },
        },
        "before": Object {
          "method": "get",
          "pathPattern": "/example",
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {},
                  "type": "object",
                },
              },
            },
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "method": "get",
          "path": "/example",
        },
        "conceptualPath": Array [
          "operations",
          "/example",
          "get",
        ],
        "jsonPath": "/paths/~1example/get",
        "kind": "operation",
      },
    },
  ],
  "next": Object {
    "info": Object {
      "title": "Empty",
      "version": "0.0.0",
    },
    "openapi": "3.0.1",
    "paths": Object {
      "/example": Object {
        "get": Object {
          "requestBody": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "count": Object {
                      "type": "number",
                    },
                  },
                  "required": Array [
                    "count",
                  ],
                  "type": "object",
                },
              },
            },
          },
          "responses": Object {},
        },
      },
    },
  },
  "results": Array [
    Object {
      "change": Object {
        "added": Object {
          "flatSchema": Object {
            "type": "number",
          },
          "key": "count",
          "required": true,
        },
        "changeType": "added",
        "location": Object {
          "conceptualLocation": Object {
            "inRequest": Object {
              "body": Object {
                "contentType": "application/json",
              },
            },
            "jsonSchemaTrail": Array [
              "count",
            ],
            "method": "get",
            "path": "/example",
          },
          "conceptualPath": Array [
            "operations",
            "/example",
            "get",
            "application/json",
            "count",
          ],
          "jsonPath": "/paths/~1example/get/requestBody/content/application~1json/schema/properties/count",
          "kind": "field",
        },
      },
      "condition": "not be required",
      "docsLink": undefined,
      "effectiveOnDate": undefined,
      "error": "expected true to be false",
      "isMust": true,
      "isShould": false,
      "passed": false,
      "where": "added field: count",
    },
  ],
}
`;

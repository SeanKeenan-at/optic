// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`breaking changes ruleset - parameter type change "cookie" parameter type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "cookie": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "cookie",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "cookie-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent cookie parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users cookie parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "cookie": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "cookie",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "cookie-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent cookie parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users cookie parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "cookie": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "cookie",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "cookie-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "expected cookie parameter 'version' to not change type. This is a breaking change.",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent cookie parameters type changes",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users cookie parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "cookie",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "cookie": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "cookie",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "cookie-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent requiring existing cookie parameters",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users cookie parameter: version",
  },
]
`;

exports[`breaking changes ruleset - parameter type change "header" parameter type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "header": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "header",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "header-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent header parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users header parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "header": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "header",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "header-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent header parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users header parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "header": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "header",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "header-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "expected header parameter 'version' to not change type. This is a breaking change.",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent header parameters type changes",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users header parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "header",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "header": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "header",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "header-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent requiring existing header parameters",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users header parameter: version",
  },
]
`;

exports[`breaking changes ruleset - parameter type change "path" parameter type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "path": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "path",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent path parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users path parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "path": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "path",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent path parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users path parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "path",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "path": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "path",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "path-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "expected path parameter 'version' to not change type. This is a breaking change.",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent path parameters type changes",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users path parameter: version",
  },
]
`;

exports[`breaking changes ruleset - parameter type change "query" parameter type change 1`] = `
Array [
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users query parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameters enum breaking changes",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users query parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": "expected query parameter 'version' to not change type. This is a breaking change.",
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent query parameters type changes",
    "passed": false,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users query parameter: version",
  },
  Object {
    "change": Object {
      "changeType": "changed",
      "changed": Object {
        "after": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "number",
          },
        },
        "before": Object {
          "in": "query",
          "name": "version",
          "schema": Object {
            "type": "string",
          },
        },
      },
      "location": Object {
        "conceptualLocation": Object {
          "inRequest": Object {
            "query": "version",
          },
          "method": "get",
          "path": "/api/users",
        },
        "conceptualPath": Array [
          "operations",
          "/api/users",
          "get",
          "parameters",
          "query",
          "version",
        ],
        "jsonPath": "/paths/~1api~1users/get/parameters/0",
        "kind": "query-parameter",
      },
    },
    "condition": undefined,
    "docsLink": undefined,
    "error": undefined,
    "exempted": false,
    "expected": undefined,
    "isMust": true,
    "isShould": false,
    "name": "prevent requiring existing query parameters",
    "passed": true,
    "received": undefined,
    "type": "changed",
    "where": "GET /api/users query parameter: version",
  },
]
`;
